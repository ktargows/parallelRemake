% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makefile.R
\name{makefile}
\alias{makefile}
\title{Function \code{makefile}}
\usage{
makefile(targets = "all", remakefiles = "remake.yml", prepend = NULL,
  remake_args = list(verbose = TRUE), run = TRUE, command = "make",
  args = character(0))
}
\arguments{
\item{targets}{character vector of targets to make}

\item{remakefiles}{Character vector of paths to input \code{remake} files.}

\item{prepend}{Character vector of lines to prepend to the Makefile.}

\item{remake_args}{Named list of additional arguments to \code{remake::make}.}

\item{run}{logical, whether to actually run the Makefile or just write it.}

\item{command}{character scalar, command to run to execute the Makefile.
\code{command} and \code{args} will be used to call 
\code{system2(command = command, args = args)} to run the \code{Makefile}.
For example, to execute the \code{Makefile} using 4 parallel jobs
while suppressing output to the console, use 
\code{makefile(..., command = "make", args = c("--jobs=4", "-s"))}.}

\item{args}{character vector of arguments to the specified \code{command}.
\code{command} and \code{args} will be used to call
\code{system2(command = command, args = args)} to run the \code{Makefile}.
For example, to execute the \code{Makefile} using 4 parallel jobs
while suppressing output to the console, use
\code{makefile(..., command = "make", args = c("--jobs=4", "-s"))}.}
}
\description{
Writes an executes a Makefile to distribute \code{remake} targets
over simultaneous processes.
Use the \code{\link{help_parallelRemake}} function to get more help.
}
\details{
Use the \code{\link{help_parallelRemake}} function to get more help.
}
\seealso{
\code{\link{help_parallelRemake}}
}

